***A Pattern Language

**Patterns-That-Work (especially those rooted in nature, or primate or human nature)

**Early history: tribal, familial, kinship, kill-the-stranger, unconscious behavior such as mimicry, scapegoat-as-final-solution, killing sacrifices, burnt offerings,
these are interfaces to complex behaviors (methods or functions) so, they are Classes.


'Asking the Universe for Help' is always a viable option. 

**The Timeless Way of Building (previous book by Christopher Alexander)

**Design Patterns

**Object Orientation -- simple interfaces to {data (database) + methods (business logic)}

**Ruby versions of Design Patterns (:cf => 'that o'reilly book')

**A Hearth is the Heart of a Home

**Thick Walls

**Couple's Upstairs Hideaway

**Window Seat

poetic descriptions of time-honored solutions that accomodate human needs and social and natural forces for social benefit.

                                                                               


